# _md5hash=15f8ad82f6bc18308ec172be0cd37b39
# _version=96
# Dataplaneapi managed File
# changing file directly can cause a conflict if dataplaneapi is running

global
  master-worker
  stats socket /var/run/api.sock user haproxy group haproxy mode 660 level admin expose-fd listeners
  log stdout format raw local0 info

defaults
  mode http
  log global
  timeout http-request 10s
  timeout connect 5s
  timeout client 10s
  timeout server 10s

userlist haproxy-dataplaneapi
  user admin insecure-password mypassword

resolvers docker
  nameserver dns1 127.0.0.11:53

frontend api_gateway
  bind :80
  acl PATH_newservice5 path_beg -i /api/newservice5
  acl PATH_newservice4 path_beg -i /api/newservice4
  acl PATH_newservice3 path_beg -i /api/newservice3
  acl PATH_newservice2 path_beg -i /api/newservice2
  acl PATH_newservice22 path_beg -i /api/newservice22
  acl PATH_newservice3 path_beg -i /api/newservice3
  acl PATH_newservice21 path_beg -i /api/newservice21
  acl PATH_newservice2 path_beg -i /api/newservice2
  acl PATH_newservice5 path_beg -i /api/newservice5
  acl PATH_newservice4 path_beg -i /api/newservice4
  acl PATH_newservice3 path_beg -i /api/newservice3
  acl PATH_newservice2 path_beg -i /api/newservice2
  acl PATH_newservice5 path_beg -i /api/newservice5
  acl PATH_newservice3 path_beg -i /api/newservice3
  acl PATH_newservice2 path_beg -i /api/newservice2
  acl PATH_newservice2 path_beg -i /api/newservice2
  acl PATH_newservice4 path_beg -i /api/newservice4
  acl PATH_newservice3 path_beg -i /api/newservice3
  acl PATH_newservice2 path_beg -i /api/newservice2
  acl PATH_newservice2 path_beg -i /api/newservice2
  acl PATH_newservice2 path_beg -i /api/newservice2
  acl PATH_newservice2 path_beg -i /api/newservice2
  acl PATH_comments path_beg -i /api/comments
  acl PATH_users path_beg -i /api/users
  acl PATH_posts path_beg -i /api/posts
  acl PATH_threads path_beg -i /api/threads
  use_backend be_newservice5 if PATH_newservice5
  use_backend be_newservice4 if PATH_newservice4
  use_backend be_newservice3 if PATH_newservice3
  use_backend be_newservice2 if PATH_newservice2
  use_backend be_newservice22 if PATH_newservice22
  use_backend be_newservice3 if PATH_newservice3
  use_backend be_newservice21 if PATH_newservice21
  use_backend be_newservice2 if PATH_newservice2
  use_backend be_newservice5 if PATH_newservice5
  use_backend be_newservice4 if PATH_newservice4
  use_backend be_newservice3 if PATH_newservice3
  use_backend be_newservice2 if PATH_newservice2
  use_backend be_newservice5 if PATH_newservice5
  use_backend be_newservice3 if PATH_newservice3
  use_backend be_newservice2 if PATH_newservice2
  use_backend be_newservice2 if PATH_newservice2
  use_backend be_newservice4 if PATH_newservice4
  use_backend be_newservice3 if PATH_newservice3
  use_backend be_newservice2 if PATH_newservice2
  use_backend be_newservice2 if PATH_newservice2
  use_backend be_newservice2 if PATH_newservice2
  use_backend be_newservice2 if PATH_newservice2
  use_backend be_users if PATH_users
  use_backend be_comments if PATH_comments
  use_backend be_posts if PATH_posts
  use_backend be_threads if PATH_threads

frontend stats
  bind *:8404
  stats enable
  stats uri /
  stats refresh 10s

backend be_comments
  balance roundrobin
  server-template microservices-comments- 20 comments:3000 check resolvers docker init-addr libc,none

backend be_newservice2
  balance roundrobin
  server-template microservices-newservice2- 20 newservice2:3000 check init-addr libc,none resolvers docker

backend be_newservice21
  balance roundrobin
  server-template microservices-newservice21- 20 newservice21:3000 check init-addr libc,none resolvers docker

backend be_newservice22
  balance roundrobin
  server-template microservices-newservice22- 20 newservice22:3000 check init-addr libc,none resolvers docker

backend be_newservice3
  balance roundrobin
  server-template microservices-newservice3- 20 newservice3:3000 check init-addr libc,none resolvers docker

backend be_newservice4
  balance roundrobin
  server-template microservices-newservice4- 20 newservice4:3000 check init-addr libc,none resolvers docker

backend be_newservice5
  balance roundrobin
  server-template microservices-newservice5- 20 newservice5:3000 check init-addr libc,none resolvers docker

backend be_posts
  balance roundrobin
  server-template microservices-posts- 20 posts:3000 check resolvers docker init-addr libc,none

backend be_threads
  balance roundrobin
  server-template microservices-threads- 20 threads:3000 check resolvers docker init-addr libc,none

backend be_users
  balance roundrobin
  server-template microservices-users- 20 users:3000 check resolvers docker init-addr libc,none

program api
  command /usr/bin/dataplaneapi --host 0.0.0.0 --port 5555 --haproxy-bin /usr/sbin/haproxy --config-file=/usr/local/etc/haproxy/haproxy.cfg --reload-cmd "kill -SIGUSR2 1" --reload-delay 5 --userlist haproxy-dataplaneapi
  no option start-on-reload
